name: Test
on:
  push:
    branches: ["feature/workflow"]
  pull_request:
    branches: ["feature/workflow"]

permissions:
  contents: write
jobs:
  test:
    # Faltan los test de front
    runs-on: ubuntu-latest
    environment: test-and-create-image
    container: maven:3.9-eclipse-temurin-21
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: SeguiTusCompras  # ${{ secrets.POSTGRES_DB_TEST }}
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - "5432:5432"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run tests with Maven
        working-directory: ./Back/SeguiTusCompras
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: mvn -B test
  tag:
      if: github.event_name == 'push'
      needs: test
      runs-on: ubuntu-latest
      permissions:
        contents: write
      
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate and Push Next Checkpoint Tag
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

          git fetch --tags
          LATEST_TAG=$(git tag --list "checkpoint-*" --sort=v:refname | tail -n 1)
          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="checkpoint-1"
          else
            VERSION_NUMBER=$(echo $LATEST_TAG | sed 's/^checkpoint-//')
            NEXT_VERSION_NUMBER=$((VERSION_NUMBER + 1))
            NEW_TAG="checkpoint-${NEXT_VERSION_NUMBER}"
          fi

          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "new_tag_value=$NEW_TAG" >> "$GITHUB_OUTPUT"

  create-images:
      if: github.event_name == 'push'
      needs:  [test, tag]
      runs-on: ubuntu-latest
      permissions:
        contents: read
      env:
        IMAGE_TAG: ${{ needs.tag.outputs.new_tag }}
        BACKEND_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/seguituscompras_backend
        FRONTEND_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/seguituscompras_frontend
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Back/SeguiTusCompras
          file: ./Back/SeguiTusCompras/Dockerfile 
          push: true
          tags: ${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.BACKEND_IMAGE_NAME }}:latest
      

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Front 
          file: ./Front/Dockerfile 
          push: true
          tags: ${{ env.FRONTEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.FRONTEND_IMAGE_NAME }}:latest    
